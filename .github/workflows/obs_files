#!/bin/bash

_git_pkg()
{
    # PKGBUILD after prepare() has updated pkgver
    rm PKGBUILD
    cp /home/build/PKGBUILD .

    # remove pkgver function
    sed -i '/^pkgver() {$/,/^}$/d' PKGBUILD
}

_gen_constraints()
{
cat > "_constraints" << EOF
<!-- vim: set ft=xml : -->
<constraints>
  <hardware>
    <disk>
      <size unit="G">16</size>
    </disk>
    <memory>
      <size unit="G">16</size>
    </memory>
  </hardware>
</constraints>
EOF
}

_empty_constraints()
{
cat > "_constraints" << EOF
<!-- vim: set ft=xml : -->
<constraints>
</constraints>
EOF
}

_medium_constraints()
{
cat > "_constraints" << EOF
<!-- vim: set ft=xml : -->
<constraints>
  <hardware>
    <memory>
      <size unit="G">8</size>
    </memory>
  </hardware>
</constraints>
EOF
}

mongodb()
{
python ../.github/workflows/mirror/gen-service.py

cat > "_constraints" << EOF
<!-- vim: set ft=xml : -->
<constraints>
  <hardware>
    <memory>
      <size unit="G">12</size>
    </memory>
  </hardware>
</constraints>
EOF
}

hsakmt-roct()
{

python ../.github/workflows/mirror/gen-service.py

_medium_constraints

# remove check function
sed -i '/^check() {$/,/^}$/d' PKGBUILD
}

rocm-opencl-runtime()
{

python ../.github/workflows/mirror/gen-service.py

_medium_constraints

# remove check function
sed -i '/^check() {$/,/^}$/d' PKGBUILD
}

hsa-rocr()
{
python ../.github/workflows/mirror/gen-service.py
_medium_constraints
}

comgr()
{
python ../.github/workflows/mirror/gen-service.py
_medium_constraints
}

rocm-device-libs()
{
python ../.github/workflows/mirror/gen-service.py
_medium_constraints
}


blender-rocm()
{
source PKGBUILD

_gen_constraints

cat > "_service" << EOF
<!-- vi:set ft=xml: -->
<services>
    <service name="tar_scm">
        <param name="scm">git</param>
        <param name="url">https://git.blender.org/blender.git</param>
        <param name="revision">v$pkgver</param>
        <param name="filename">blender</param>
        <param name="version">_none_</param>
        <param name="submodules">disable</param>
    </service>
    <service name="tar_scm">
        <param name="scm">git</param>
        <param name="url">https://git.blender.org/blender-addons.git</param>
        <param name="revision">v$pkgver</param>
        <param name="filename">blender-addons</param>
        <param name="version">_none_</param>
    </service>
    <service name="tar_scm">
        <param name="scm">git</param>
        <param name="url">https://git.blender.org/blender-addons-contrib.git</param>
        <param name="revision">v$pkgver</param>
        <param name="filename">blender-addons-contrib</param>
        <param name="version">_none_</param>
    </service>
    <service name="tar_scm">
        <param name="scm">git</param>
        <param name="url">https://git.blender.org/blender-translations.git</param>
        <param name="revision">v$pkgver</param>
        <param name="filename">blender-translations</param>
        <param name="version">_none_</param>
    </service>
    <service name="tar_scm">
        <param name="scm">git</param>
        <param name="url">https://git.blender.org/blender-dev-tools.git</param>
        <param name="revision">v$pkgver</param>
        <param name="filename">blender-dev-tools</param>
        <param name="version">_none_</param>
    </service>
    <service name="obs_scm">
        <param name="scm">git</param>
        <param name="url">https://aur.archlinux.org/$pkgname</param>
        <param name="extract">[!PKGBUILD]*</param>
    </service>
</services>
EOF


# remove prepare function
sed -i '/^prepare() {$/,/^}$/d' PKGBUILD

# add stuff to PKGBUILD
cat >> "PKGBUILD" << EOF
source[0]=blender.tar
source[1]=blender-addons.tar
source[2]=blender-addons-contrib.tar
source[3]=blender-translations.tar
source[4]=blender-dev-tools.tar

prepare() {
  cd "\$_pkgname"

  rmdir release/scripts/{addons,addons_contrib} release/datafiles/locale source/tools
  cp -r "\${srcdir}/blender-addons" release/scripts/addons
  cp -r "\${srcdir}/blender-addons-contrib" release/scripts/addons_contrib
  cp -r "\${srcdir}/blender-translations" release/datafiles/locale
  cp -r "\${srcdir}/blender-dev-tools" source/tools

  patch -p1 -i "\$srcdir"/force-draco1.patch
  patch -p1 -d release/scripts/addons -i "\$srcdir"/force-draco2.patch
}
EOF

}

mongodb44()
{
    mongodb
}

mongodb50()
{
    mongodb
}

libva-vdpau-driver-wayland()
{
    python ../.github/workflows/mirror/gen-service.py

    _empty_constraints
}

python-stdnum()
{
    python ../.github/workflows/mirror/gen-service.py

    _empty_constraints
}

libstdc++5()
{
    python ../.github/workflows/mirror/gen-service.py

    _empty_constraints
}

phoenixminer-bin()
{
    python ../.github/workflows/mirror/gen-service.py

    _empty_constraints
}

gminer-bin()
{
    python ../.github/workflows/mirror/gen-service.py

    _empty_constraints
}

python-sphinx-automodapi()
{
    python ../.github/workflows/mirror/gen-service.py

    _empty_constraints
}

ungoogled-chromium()
{

source PKGBUILD

# Add required dependencies for OBS
newdeps=$(printf "'%s' " "${depends[@]}")
makedeps=$(printf "'%s' " "${makedepends[@]}")

makedeps=$(printf '%s\n' "${makedeps//\'java-runtime-headless\'/}")
makedeps="${makedeps}'jack' 'jre-openjdk-headless' 'wayland-protocols'"

sed -r -i \
    -e '/^depends=/,/[)]$/cdepends=('"${newdeps}"')' \
    -e '/^depends[+]=/d' \
    -e '/^makedepends=/,/[)]$/cmakedepends=('"${makedeps}"')' \
    "PKGBUILD"

python ../.github/workflows/mirror/gen-service.py

_gen_constraints
}

xorgproto-git()
{
_git_pkg

source PKGBUILD

# replace git url
new_url="\${pkgname}.tar"
sed_param=s/_srcurl=.*/_srcurl=\"${new_url}\"/
sed -i "$sed_param" PKGBUILD

# generate _service file
cat > "_service" << EOF
<services>
  <service name="tar_scm">
    <param name="scm">git</param>
    <param name="url">https://gitlab.freedesktop.org/xorg/proto/$_pkgname.git</param>
    <param name="filename">$pkgname</param>
    <param name="version">_none_</param>
  </service>
</services>
EOF

_empty_constraints
}

mesa-git()
{
_git_pkg
_empty_constraints

source PKGBUILD

# generate _service file
cat > "_service" << EOF
<services>
  <service name="tar_scm">
    <param name="scm">git</param>
    <param name="url">https://gitlab.freedesktop.org/mesa/mesa.git</param>
    <param name="revision">main</param>
    <param name="filename">mesa</param>
    <param name="version">_none_</param>
  </service>
</services>
EOF

# add stuff to PKGBUILD
cat >> "PKGBUILD" << EOF
source[0]=mesa.tar
EOF
}

llvm-git()
{
_git_pkg
_gen_constraints

source PKGBUILD

# generate _service file
cat > "_service" << EOF
<services>
  <service name="tar_scm">
    <param name="scm">git</param>
    <param name="url">https://github.com/llvm/llvm-project.git</param>
    <param name="filename">llvm-project</param>
    <param name="revision">main</param>
    <param name="version">_none_</param>
  </service>
  <service name="obs_scm">
    <param name="scm">git</param>
    <param name="url">https://github.com/jstkdng/aur</param>
    <param name="subdir">$PACKAGE</param>
    <param name="extract">[!PKGBUILD]*</param>
  </service>
</services>
EOF

# add stuff to PKGBUILD
cat >> "PKGBUILD" << EOF
source[0]=llvm-project.tar
EOF
}

xorg-server-git()
{
_git_pkg
_empty_constraints

source PKGBUILD

# generate _service file
cat > "_service" << EOF
<services>
  <service name="tar_scm">
    <param name="scm">git</param>
    <param name="url">https://gitlab.freedesktop.org/xorg/xserver.git</param>
    <param name="filename">$_pkgbase</param>
    <param name="version">_none_</param>
  </service>
  <service name="obs_scm">
    <param name="scm">git</param>
    <param name="url">https://github.com/jstkdng/aur</param>
    <param name="subdir">$PACKAGE</param>
    <param name="extract">[!PKGBUILD]*</param>
  </service>
</services>
EOF

# add stuff to PKGBUILD
cat >> "PKGBUILD" << EOF
source[0]=${_pkgbase}.tar
EOF

}

xf86-video-amdgpu-git()
{
_git_pkg
_empty_constraints

source PKGBUILD

# generate _service file
cat > "_service" << EOF
<services>
  <service name="tar_scm">
    <param name="scm">git</param>
    <param name="url">https://gitlab.freedesktop.org/xorg/driver/$_pkgname</param>
    <param name="filename">$pkgname</param>
    <param name="version">_none_</param>
  </service>
</services>
EOF

# add stuff to PKGBUILD
cat >> "PKGBUILD" << EOF
source=("$pkgname.tar")
EOF

}

linux-firmware-git()
{
_git_pkg
_medium_constraints

source PKGBUILD

# generate _service file
cat > "_service" << EOF
<services>
  <service name="tar_scm">
    <param name="scm">git</param>
    <param name="url">https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git</param>
    <param name="filename">$pkgbase</param>
    <param name="revision">main</param>
    <param name="version">_none_</param>
  </service>
  <service name="obs_scm">
    <param name="scm">git</param>
    <param name="url">https://github.com/jstkdng/aur</param>
    <param name="subdir">$pkgbase</param>
    <param name="extract">[!PKGBUILD]*</param>
  </service>
</services>
EOF

# add stuff to PKGBUILD
cat >> "PKGBUILD" << EOF
source[0]="$pkgbase.tar"
EOF
}

linux-amd-staging-drm-next-git()
{
_git_pkg
_gen_constraints

source PKGBUILD

# generate _service file
cat > "_service" << EOF
<services>
  <service name="tar_scm">
    <param name="scm">git</param>
    <param name="url">https://gitlab.freedesktop.org/agd5f/linux.git</param>
    <param name="filename">$_srcname</param>
    <param name="revision">$_branch</param>
    <param name="version">_none_</param>
  </service>
  <service name="obs_scm">
    <param name="scm">git</param>
    <param name="url">https://github.com/jstkdng/aur</param>
    <param name="subdir">$PACKAGE</param>
    <param name="extract">[!PKGBUILD]*</param>
  </service>
</services>
EOF

# add stuff to PKGBUILD
cat >> "PKGBUILD" << EOF
source=(
  "${_srcname}.tar"
  config         # the main kernel config file
)
EOF

}

linux-kamakiri()
{
source PKGBUILD

new_url="\$pkgbase.tar"
sed_param=s/_srcurl=.*/_srcurl=\"${new_url}\"/
sed -i "$sed_param" PKGBUILD

# generate _service file
cat > "_service" << EOF
<services>
  <service name="tar_scm">
    <param name="scm">git</param>
    <param name="url">https://git.archlinux.org/linux.git</param>
    <param name="filename">$pkgbase</param>
    <param name="revision">$_srctag</param>
    <param name="version">_none_</param>
  </service>
</services>
EOF

_gen_constraints
}

